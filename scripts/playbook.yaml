---
- hosts: dragonflys
  name: dragonfly setup
  become: yes
  tasks:
    - name: Update & Upgrade
      ansible.builtin.apt:
        update_cache: yes
        upgrade: yes
        
    - name: Install packages 
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
        name:
          - apt-utils 
          - build-essential 
          - glpk-utils 
          - openssh-server
          - python3-pip
          - python-dev 
          - python-lxml 
          - python-pygame 
          - python-wxgtk3.0 
          - python-yaml
          - curl 
          - gnupg 
          - lsb-release
          
    - name: Adding universe repo
      ansible.builtin.command: sudo add-apt-repository universe
      
    - name: Authorizing GPG key with apt
      become: true
      ansible.builtin.command: curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
        
    - name: Create ros2.list file
      become: true
      file:
        path: /etc/apt/sources.list.d/ros2.list
        state: touch
        mode: 0644
        
    - name: Add repository to the source list
      become: true
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/ros2.list
        line: "deb [arch=arm64 signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu focal main"
        mode: 0644
    
    - name: Update & Upgrade
      ansible.builtin.apt:
        update_cache: yes
        upgrade: yes
        
    - name: Install packages ros-galactic-desktop & ect.
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
        install_recommends: yes
        name:
          - ros-galactic-desktop
          - python3-matplotlib 
          - python3-opencv 
          - python3-pip 
          - python3-rosinstall 
          - python3-rosinstall-generator 
          - python3-wstool 
          - ros-galactic-mavros 
          - ros-galactic-mavros-extras
          - python3-colcon-common-extensions
          - ipython3
    
    - name: pip install pulp rx scikit-learn MAVProxy led acme
      ansible.builtin.command: pip install pulp rx scikit-learn MAVProxy led acme
    
    - name: Add the user ubuntu to the dialout group
      ansible.builtin.user:
        name: ubuntu
        group: dialout
    
    - name: add $HOME/.local/bin to the path
      lineinfile:
        path: ~/.bashrc
        line: export PATH=$PATH:$HOME/.local/bin

    - name: Copy rc.local file with owner and permissions
      ansible.builtin.copy:
        src: ../system_config/rc.local
        dest: /etc/rc.local
        mode: '0755'

    - name: Copy interfaces file with owner and permissions
      ansible.builtin.copy:
        src: ../system_config/interfaces
        dest: /etc/network/interfaces
    
    - name: Creating udev rules
      copy:
        dest: /etc/udev/rules.d/10-dragonfly.rules
        content: |
          ACTION=="add", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6015", SYMLINK+="ttysba5"
          ACTION=="add", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6001", SYMLINK+="ttypixhawk"
          ACTION=="add", ATTRS{idVendor}=="148f", ATTRS{idProduct}=="5572", NAME="wlan1"
    
    - name: Create the /home/ubuntu/dev/ directory
      ansible.builtin.file:
        path: /home/ubuntu/dev/
        state: directory
        mode: '0755'
      become: yes
      become_user: ubuntu
    
    - name: Git clone BCLab-UNM's dragonfly-controller
      ansible.builtin.git:
        repo: https://github.com/BCLab-UNM/dragonfly-controller.git
        dest: /home/ubuntu/dev/dragonfly/
        single_branch: yes
        version: ansible_playbook
      become: yes
      become_user: ubuntu
      
    - name: Buidling dragonfly controller with colcon build
      ansible.builtin.shell: source /opt/ros/galactic/setup.bash && colcon build
      args:
        chdir: /home/ubuntu/dev/dragonfly/
        executable: /bin/bash
      become: yes
      become_user: ubuntu
        
    - name: Run Install Geographiclib Datasets
      ansible.builtin.command: /home/ubuntu/dev/dragonfly/datasets/install_geographiclib_datasets.sh
    
    - name: Remove ModemManager package
      ansible.builtin.apt:
          name: ModemManager
          state: absent
    
    - name: Cron on boot dragonfly controller startup
      ansible.builtin.cron:
        name: "Cron on boot dragonfly controller startup"
        special_time: reboot
        job: "cd /home/ubuntu/dev/dragonfly/ ; ./startup.sh&"
      become: yes
      become_user: ubuntu
        
    - name: Cron 15 minute logrotate
      ansible.builtin.cron:
        name: "Cron 15 minute logrotate"
        minute: "*/15"
        job: "/usr/sbin/logrotate -s /tmp/logrotate.tmp /home/ubuntu/dev/dragonfly/logrotate.conf"
      become: yes
      become_user: ubuntu
    
    - name: Adding dhclient start up to rc.local
      ansible.builtin.lineinfile:
        path: /etc/rc.local
        regexp: '^sudo dhclient wlan0\n'
        insertafter: '^sudo dhclient wlan0\n'
        line: '^sudo dhclient wlan1\n'
        
    - name: Create 20-adhoc.yaml file
      become: true
      file:
        path: /etc/netplan/20-adhoc.yaml
        state: touch
        mode: 0644
        
    - name: add dragonflyadhoc network to 20-adhoc.yaml, !!! Please make sure to edit the address to match the Dragonfly's number !!!
      blockinfile:
        path: /etc/netplan/20-adhoc.yaml
        block: |
          network:
            version: 2
            renderer: NetworkManager
            wifis:
              wlan1:
                access-points:
                  "dragonflyadhoc":
                    mode: adhoc
                    password: "s:dragonfly"
                dhcp4: no
                addresses: [10.42.0.1/24]
                gateway4: 10.42.0.100
                nameservers:
                 addresses: [8.8.8.8,8.8.4.4]
                 
    - name: Apply the dragonflyadhoc netplan
      ansible.builtin.command: sudo netplan apply
    
    - name: All done rebooting the dragonfly
      reboot:

