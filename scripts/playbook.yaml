---
- hosts: dragonfly*.local
  name: dragonfly setup
  become: yes
  tasks:
    - name: Install packages 
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
        name:
          - apt-utils 
          - build-essential 
          - glpk-utils 
          - openssh-server
          - python3-pip
          - python-dev 
          - python-lxml 
          - python-pygame 
          - python-wxgtk3.0 
          - python-yaml
          
    - name: Add ROS GPG key
      become: true
      ansible.builtin.apt_key:
        url: https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc
        state: present

    - name: Create ros2-latest.list file
      become: true
      file:
        path: /etc/apt/sources.list.d/ros2-latest.list
        state: touch
        mode: 0644

    - name: Add repository to the source list
      become: true
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/ros2-latest.list
        line: "deb [arch=armhf] http://packages.ros.org/ros2/ubuntu {{ansible_distribution_release}} main"
        mode: 0644
    
    - name: Add the ros repo to your sources list
      ansible.builtin.command: echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(source /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list
    
    - name: Install packages ros-galactic-desktop & ect.
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
        name:
          - ros-galactic-desktop
          - python3-matplotlib 
          - python3-opencv 
          - python3-pip 
          - python3-rosinstall 
          - python3-rosinstall-generator 
          - python3-wstool 
          - ros-galactic-mavros 
          - ros-galactic-mavros-extras
    
    - name: rosdep init
      become: true 
      shell: 'rosdep init'

    - name: rosdep update
      become: true 
      shell: 'rosdep update'

    - name: Remove ModemManager package
      ansible.builtin.apt:
          name: ModemManager
          state: absent
          
    - name: pip install pulp rx scikit-learn MAVProxy
      ansible.builtin.command: pip install pulp rx scikit-learn MAVProxy
    
    - name: Add the user ubuntu to the dialout group
      ansible.builtin.user:
        name: ubuntu
        group: dialout
    
    - name: add $HOME/.local/bin to the path
      lineinfile:
        path: ~/.bashrc
        line: export PATH=$PATH:$HOME/.local/bin

    # not sure where this comes from
    - name: run ./datasets/install_geographiclib_datasets.sh
      ansible.builtin.command: ./datasets/install_geographiclib_datasets.sh
      
    - name: Copy rc.local file with owner and permissions
      ansible.builtin.copy:
        src: ../system_config/rc.local
        dest: /etc/rc.local

    - name: Copy interfaces file with owner and permissions
      ansible.builtin.copy:
        src: ../system_config/interfaces
        dest: /etc/network/interfaces
    
    - name: Creating udev rules
      copy:
        dest: /etc/udev/rules.d/10-dragonfly.rules
        content: |
          ACTION=="add", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6015", SYMLINK+="ttysba5"
          ACTION=="add", ATTRS{idVendor}=="10c4", ATTRS{idProduct}=="ea60", SYMLINK+="ttypixhawk"
        
    - name: Cron on boot dragonfly controller startup
      ansible.builtin.cron:
        name: "Cron on boot dragonfly controller startup"
        special_time: reboot
        job: "cd /home/ubuntu/dev/dragonfly/ ; ./startup.sh&"
        
    - name: Cron 15 minute logrotate
      ansible.builtin.cron:
        name: "Cron 15 minute logrotate"
        minute: "*/15 * * * * "
        job: "/usr/sbin/logrotate -s /tmp/logrotate.tmp /home/ubuntu/dev/dragonfly/logrotate.conf"
    
    - name: All done rebooting the dragonfly
      reboot:

